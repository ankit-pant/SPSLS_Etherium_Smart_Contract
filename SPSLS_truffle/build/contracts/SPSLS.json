{
  "contractName": "SPSLS",
  "abi": [
    {
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "bid"
        },
        {
          "type": "address",
          "name": "addr"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "constructor"
    },
    {
      "name": "get_owner_addr",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 513
    },
    {
      "name": "get_fee",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 543
    },
    {
      "name": "get_payable_amount",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "addr"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 727
    },
    {
      "name": "get_number_players",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 603
    },
    {
      "name": "get_game_count",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 633
    },
    {
      "name": "get_agent_choice",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 663
    },
    {
      "name": "get_player_hash",
      "outputs": [
        {
          "type": "bytes32",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "addr"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1705
    },
    {
      "name": "check_registrations",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "addr"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 2116
    },
    {
      "name": "register",
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": true,
      "type": "function",
      "gas": 146582
    },
    {
      "name": "select_human_opponent",
      "outputs": [],
      "inputs": [
        {
          "type": "bool",
          "name": "oppn"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 37477
    },
    {
      "name": "check_opponent",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "addr"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1027
    },
    {
      "name": "check_valid_choice",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "uint256",
          "name": "ch"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1665
    },
    {
      "name": "check_game_winner",
      "outputs": [
        {
          "type": "string",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 572084
    },
    {
      "name": "check_round_winner",
      "outputs": [
        {
          "type": "string",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 154224
    },
    {
      "name": "reveal",
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "name": "ch"
        },
        {
          "type": "uint256",
          "name": "nonce"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 112679
    },
    {
      "name": "play",
      "outputs": [],
      "inputs": [
        {
          "type": "bytes32",
          "name": "choiceHash"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 38761
    },
    {
      "name": "player1_wins",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1203
    },
    {
      "name": "player2_wins",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1233
    },
    {
      "name": "agent_wins",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1263
    }
  ],
  "bytecode": "0x740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a0526040611fdb6101403934156100a157600080fd5b60206020611fdb0160c03960c05160205181106100bd57600080fd5b50610140516000556000600155610160516007556000600855600a60095560636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c02001556063600e55611fc356600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263e92e85d960005114156100ba5734156100ac57600080fd5b60075460005260206000f350005b6364af47cf60005114156100e15734156100d357600080fd5b60005460005260206000f350005b634a92e6fa60005114156101285734156100fa57600080fd5b600435602051811061010b57600080fd5b50600360043560e05260c052604060c0205460005260206000f350005b637bceb538600051141561014f57341561014157600080fd5b60015460005260206000f350005b63428889b2600051141561017657341561016857600080fd5b60085460005260206000f350005b6302387dee600051141561019d57341561018f57600080fd5b60065460005260206000f350005b6390ddafc460005114156102505734156101b657600080fd5b60043560205181106101c757600080fd5b50600260c052602060c02060c052602060c020546004351415610203576001600260c052602060c02060c052602060c020015461014052610241565b6001600260c052602060c0200160c052602060c0205460043514156102405760016001600260c052602060c0200160c052602060c0200154610140525b5b6101405160005260206000f350005b6000156102b3575b61018052610140526101605260005461016051106002600154101517156102a357600060006000600061016051610140516000f161029557600080fd5b600060005260005161018051565b6001600052600051610180515650005b600015610305575b61016052610140526001600260c052602060c0200160c052602060c020546101405114600260c052602060c02060c052602060c02054610140511417600052600051610160515650005b63341ae5f1600051141561038957341561031e57600080fd5b600435602051811061032f57600080fd5b506101405163619ea806610180526004356101a0526101a051600658016102bb565b61020052610140526102005161014052600161014051141561037c57600160005260206000f3610387565b600060005260206000f35b005b631aa3a00860005114156104c55763619ea80661024052336102605261026051600658016102bb565b6102c0526102c051156103da57600060006000600034336000f16103d557600080fd5b6104c3565b61014051635d0e94b261018052336101a052346101c0526101c0516101a05160065801610258565b6102205261014052610220516101405261014051156104c25733600261042757600080fd5b6002600154066002811061043a57600080fd5b600260c052602060c0200160c052602060c02055600180546001825401101561046257600080fd5b60018154018155506000543411156104c15760033360e05260c052604060c020805460005434101561049357600080fd5b600054340382540110156104a657600080fd5b6000543410156104b557600080fd5b60005434038154018155505b5b5b005b6346218d3160005114156105365734156104de57600080fd5b600435600281106104ee57600080fd5b5063619ea80661014052336101605261016051600658016102bb565b6101c0526101c051156105345760085415156105335760043560043360e05260c052604060c020555b5b005b6308befc1e600051141561057d57341561054f57600080fd5b600435602051811061056057600080fd5b50600460043560e05260c052604060c0205460005260206000f350005b600015610652575b61018052610140526101605260088054600182540110156105a557600080fd5b60018154018155506101605160056105bc57600080fd5b6005610140516001610140510110156105d457600080fd5b600161014051010614156105f657610160516000526000516101805156610650565b61016051600561060557600080fd5b60056101405160026101405101101561061d57600080fd5b6002610140510106141561063f5761016051600052600051610180515661064f565b6101405160005260005161018051565b5b005b600015610681575b61016052610140526004610140511115600061014051101516600052600051610160515650005b631c134cf260005114156106ca57341561069a57600080fd5b637029313d6101405260043561016052610160516006580161065a565b6101c0526101c05160005260206000f350005b600015610889575b61016052610140526002600154141561083a57606361014051181561075b57600060006000600060021515610708576000610725565b6000546002600054600202041461071e57600080fd5b6000546002025b610140516002811061073657600080fd5b600260c052602060c0200160c052602060c020546000f161075657600080fd5b61079f565b60006000600060006002151561077257600061078f565b6000546002600054600202041461078857600080fd5b6000546002025b6007546000f161079e57600080fd5b5b60006000600060006003600260c052602060c02060c052602060c0205460e05260c052604060c02054600260c052602060c02060c052602060c020546000f16107e757600080fd5b600060006000600060036001600260c052602060c0200160c052602060c0205460e05260c052604060c020546001600260c052602060c0200160c052602060c020546000f161083557600080fd5b610883565b60006000600060006003600260c052602060c02060c052602060c0205460e05260c052604060c02054600260c052602060c02060c052602060c020546000f161088257600080fd5b5b61016051565b600015610a20575b6101405260006003600260c052602060c02060c052602060c0205460e05260c052604060c02055600060036001600260c052602060c0200160c052602060c0205460e05260c052604060c0205560006004600260c052602060c02060c052602060c0205460e05260c052604060c02055600060046001600260c052602060c0200160c052602060c0205460e05260c052604060c0205560636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c0200155600260c052602060c0208060c052602060c02060008155600060018201556000600282015560006003820155506001810160c052602060c02060008155600060018201556000600282015560006003820155505060006008556000600155600080600560c052602060c020600161012060006001818352015b826101205160200211156109e657610a00565b6000610120518501555b81516001018083528114156109d3575b5050505050506000600b556000600c556000600a55600060065561014051565b63b13764966000511415610eea573415610a3957600080fd5b60026001541415610c9f576063610460526009546008541415610c1957600c54600b541115610abd5760006104605260086105a0527f506c6179657220310000000000000000000000000000000000000000000000006105c0526105a0805160200180610480828460006004600a8704601201f1610ab657600080fd5b5050610b76565b600c54600b541015610b24576001610460526008610540527f506c61796572203200000000000000000000000000000000000000000000000061056052610540805160200180610480828460006004600a8704601201f1610b1d57600080fd5b5050610b75565b60046104e0527f4472617700000000000000000000000000000000000000000000000000000000610500526104e0805160200180610480828460006004600a8704601201f1610b7257600080fd5b50505b5b61046051610480516104a0516104c05163aff1e0d361062052610460516106405261064051600658016106d2565b6104c0526104a05261048052610460526000506104606106a0525b6106a0515160206106a051016106a0526106a06106a0511015610be157610bbf565b60065801610891565b6106806106a0525b6106a0515260206106a051036106a0526104606106a051101515610c1557610bf2565b6000505b610480805160200180610700828460006004600a8704601201f1610c3c57600080fd5b5050610760610700516020818352015b6020610760511115610c5d57610c79565b60006107605161072001535b8151600101808352811415610c4c575b505060206106e0526040610700510160206001820306601f82010390506106e0f3610ee8565b6063610140526009546008541415610e6657600d54600b541115610d12576006610280527f506c6179657200000000000000000000000000000000000000000000000000006102a052610280805160200180610160828460006004600a8704601201f1610d0b57600080fd5b5050610dc5565b600d54600b541015610d73576005610220527f4167656e7400000000000000000000000000000000000000000000000000000061024052610220805160200180610160828460006004600a8704601201f1610d6c57600080fd5b5050610dc4565b60046101c0527f44726177000000000000000000000000000000000000000000000000000000006101e0526101c0805160200180610160828460006004600a8704601201f1610dc157600080fd5b50505b5b6101405161016051610180516101a05163aff1e0d36103005260006103205261032051600658016106d2565b6101a052610180526101605261014052600050610140610380525b61038051516020610380510161038052610380610380511015610e2e57610e0c565b60065801610891565b610360610380525b6103805152602061038051036103805261014061038051101515610e6257610e3f565b6000505b6101608051602001806103e0828460006004600a8704601201f1610e8957600080fd5b50506104406103e0516020818352015b6020610440511115610eaa57610ec6565b60006104405161040001535b8151600101808352811415610e99575b505060206103c05260406103e0510160206001820306601f82010390506103c0f35b005b63679ebb356000511415611981573415610f0357600080fd5b6002600154141561166957606360026001600260c052602060c0200160c052602060c0200154141560636002600260c052602060c02060c052602060c0200154141516600a54603c600a54011015610f5a57600080fd5b603c600a54014211151615611316576109c05163ee76be97610a00526002600260c052602060c02060c052602060c0200154610a205260026001600260c052602060c0200160c052602060c0200154610a4052610a4051610a205160065801610585565b610aa0526109c052610aa0516109c05260026001600260c052602060c0200160c052602060c02001546109c051146002600260c052602060c02060c052602060c02001546109c0511416156110f15760636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c02001556004610d00527f4472617700000000000000000000000000000000000000000000000000000000610d2052610d00805160200180610da0828460006004600a8704601201f161108e57600080fd5b5050610e00610da0516020818352015b6020610e005111156110af576110cb565b6000610e0051610dc001535b815160010180835281141561109e575b50506020610d80526040610da0510160206001820306601f8201039050610d80f3611311565b60026001600260c052602060c0200160c052602060c02001546109c05114156112145760636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c0200155600c80546001825401101561115b57600080fd5b60018154018155506008610be0527f506c617965722032000000000000000000000000000000000000000000000000610c0052610be0805160200180610c80828460006004600a8704601201f16111b157600080fd5b5050610ce0610c80516020818352015b6020610ce05111156111d2576111ee565b6000610ce051610ca001535b81516001018083528114156111c1575b50506020610c60526040610c80510160206001820306601f8201039050610c60f3611310565b600b80546001825401101561122857600080fd5b600181540181555060636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c02001556008610ac0527f506c617965722031000000000000000000000000000000000000000000000000610ae052610ac0805160200180610b60828460006004600a8704601201f16112b157600080fd5b5050610bc0610b60516020818352015b6020610bc05111156112d2576112ee565b6000610bc051610b8001535b81516001018083528114156112c1575b50506020610b40526040610b60510160206001820306601f8201039050610b40f35b5b611664565b600a54603c600a5401101561132a57600080fd5b603c600a540142116000600a541415161561161957600e54151561144857600b80546001825401101561135c57600080fd5b600181540181555060636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c020015560086107e0527f506c617965722031000000000000000000000000000000000000000000000000610800526107e0805160200180610880828460006004600a8704601201f16113e557600080fd5b50506108e0610880516020818352015b60206108e051111561140657611422565b60006108e0516108a001535b81516001018083528114156113f5575b50506020610860526040610880510160206001820306601f8201039050610860f3611618565b6001600e5414156115375760636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c020015560086106c0527f506c6179657220320000000000000000000000000000000000000000000000006106e0526106c0805160200180610760828460006004600a8704601201f16114d457600080fd5b50506107c0610760516020818352015b60206107c05111156114f557611511565b60006107c05161078001535b81516001018083528114156114e4575b50506020610740526040610760510160206001820306601f8201039050610740f3611617565b60636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c020015560046105a0527f44726177000000000000000000000000000000000000000000000000000000006105c0526105a0805160200180610640828460006004600a8704601201f16115b857600080fd5b50506106a0610640516020818352015b60206106a05111156115d9576115f5565b60006106a05161066001535b81516001018083528114156115c8575b50506020610620526040610640510160206001820306601f8201039050610620f35b5b5b600061090052610900805160200180610980828460006004600a8704601201f161164257600080fd5b50506020610960526040610980510160206001820306601f8201039050610960f35b61197f565b6101405163ee76be97610180526002600260c052602060c02060c052602060c02001546101a0526006546101c0526101c0516101a05160065801610585565b6102205261014052610220516101405260065461014051146002600260c052602060c02060c052602060c0200154610140511416156117aa5760636002600260c052602060c02060c052602060c02001556004610480527f44726177000000000000000000000000000000000000000000000000000000006104a052610480805160200180610520828460006004600a8704601201f161174757600080fd5b5050610580610520516020818352015b602061058051111561176857611784565b60006105805161054001535b8151600101808352811415611757575b50506020610500526040610520510160206001820306601f8201039050610500f361197e565b60065461014051141561189c5760636002600260c052602060c02060c052602060c0200155600d8054600182540110156117e357600080fd5b60018154018155506005610360527f4167656e7400000000000000000000000000000000000000000000000000000061038052610360805160200180610400828460006004600a8704601201f161183957600080fd5b5050610460610400516020818352015b602061046051111561185a57611876565b60006104605161042001535b8151600101808352811415611849575b505060206103e0526040610400510160206001820306601f82010390506103e0f361197d565b600b8054600182540110156118b057600080fd5b600181540181555060636002600260c052602060c02060c052602060c02001556006610240527f506c617965720000000000000000000000000000000000000000000000000000610260526102408051602001806102e0828460006004600a8704601201f161191e57600080fd5b50506103406102e0516020818352015b602061034051111561193f5761195b565b60006103405161030001535b815160010180835281141561192e575b505060206102c05260406102e0510160206001820306601f82010390506102c0f35b5b5b005b600015611a1b575b61014052601161199857600080fd5b6011600343610c46430110156119ad57600080fd5b610c4643010a43610c46430110156119c457600080fd5b610c46430110600315600160031417176119dd57600080fd5b600343610c46430110156119f057600080fd5b610c4643010a06610160526005611a0657600080fd5b60056101605106600052600051610140515650005b639348cef76000511415611d54573415611a3457600080fd5b63619ea80661014052336101605261016051600658016102bb565b6101c0526101c05115611d52576101405161016051610180516101a0516101c051637029313d6102005260043561022052610220516006580161065a565b610280526101c0526101a0526101805261016052610140526102805115611d515760043360e05260c052604060c0205415611c565760026001541415611c51576001600260c052602060c02060c052602060c02001546103205260016001600260c052602060c0200160c052602060c020015461034052600061034051141560006103205114151615611c505760243560c052602060c02060043560c052602060c0201860c052602060c02061036052600260c052602060c02060c052602060c02054331415611b6257600061038052611b69565b6001610380525b60016103805160028110611b7c57600080fd5b600260c052602060c0200160c052602060c0200154610360511415611c4f57606360026001600260c052602060c0200160c052602060c02001541460636002600260c052602060c02060c052602060c0200154141615611c235742600a55600260c052602060c02060c052602060c02054331415611bfe576000600e55611c22565b6001600260c052602060c0200160c052602060c02054331415611c21576001600e555b5b5b60043560026103805160028110611c3957600080fd5b600260c052602060c0200160c052602060c02001555b5b5b611d50565b60016001541415611d4f576001600260c052602060c02060c052602060c02001546102a05260006102a0511815611d4e5760243560c052602060c02060043560c052602060c0201860c052602060c0206102c0526001600260c052602060c02060c052602060c02001546102c0511415611d4d576004356002600260c052602060c02060c052602060c02001556101406102e0525b6102e0515160206102e051016102e0526102e06102e0511015611d0d57611ceb565b60065801611989565b610300526102c06102e0525b6102e0515260206102e051036102e0526101406102e051101515611d4557611d22565b610300516006555b5b5b5b5b5b005b63c7a1865b6000511415611e30573415611d6d57600080fd5b63619ea80661014052336101605261016051600658016102bb565b6101c0526101c05115611e2e576009546008541015611e2d57600160043360e05260c052604060c020541415611e1257600260c052602060c02060c052602060c02054331415611df0576004356001600260c052602060c02060c052602060c0200155611e0d565b60043560016001600260c052602060c0200160c052602060c02001555b611e2c565b6004356001600260c052602060c02060c052602060c02001555b5b5b005b63eb7e27356000511415611e57573415611e4957600080fd5b600b5460005260206000f350005b63dde2e83f6000511415611e7e573415611e7057600080fd5b600c5460005260206000f350005b63909ff57e6000511415611ea5573415611e9757600080fd5b600d5460005260206000f350005b60006000fd5b610118611fc303610118600039610118611fc3036000f3",
  "deployedBytecode": "0x600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263e92e85d960005114156100ba5734156100ac57600080fd5b60075460005260206000f350005b6364af47cf60005114156100e15734156100d357600080fd5b60005460005260206000f350005b634a92e6fa60005114156101285734156100fa57600080fd5b600435602051811061010b57600080fd5b50600360043560e05260c052604060c0205460005260206000f350005b637bceb538600051141561014f57341561014157600080fd5b60015460005260206000f350005b63428889b2600051141561017657341561016857600080fd5b60085460005260206000f350005b6302387dee600051141561019d57341561018f57600080fd5b60065460005260206000f350005b6390ddafc460005114156102505734156101b657600080fd5b60043560205181106101c757600080fd5b50600260c052602060c02060c052602060c020546004351415610203576001600260c052602060c02060c052602060c020015461014052610241565b6001600260c052602060c0200160c052602060c0205460043514156102405760016001600260c052602060c0200160c052602060c0200154610140525b5b6101405160005260206000f350005b6000156102b3575b61018052610140526101605260005461016051106002600154101517156102a357600060006000600061016051610140516000f161029557600080fd5b600060005260005161018051565b6001600052600051610180515650005b600015610305575b61016052610140526001600260c052602060c0200160c052602060c020546101405114600260c052602060c02060c052602060c02054610140511417600052600051610160515650005b63341ae5f1600051141561038957341561031e57600080fd5b600435602051811061032f57600080fd5b506101405163619ea806610180526004356101a0526101a051600658016102bb565b61020052610140526102005161014052600161014051141561037c57600160005260206000f3610387565b600060005260206000f35b005b631aa3a00860005114156104c55763619ea80661024052336102605261026051600658016102bb565b6102c0526102c051156103da57600060006000600034336000f16103d557600080fd5b6104c3565b61014051635d0e94b261018052336101a052346101c0526101c0516101a05160065801610258565b6102205261014052610220516101405261014051156104c25733600261042757600080fd5b6002600154066002811061043a57600080fd5b600260c052602060c0200160c052602060c02055600180546001825401101561046257600080fd5b60018154018155506000543411156104c15760033360e05260c052604060c020805460005434101561049357600080fd5b600054340382540110156104a657600080fd5b6000543410156104b557600080fd5b60005434038154018155505b5b5b005b6346218d3160005114156105365734156104de57600080fd5b600435600281106104ee57600080fd5b5063619ea80661014052336101605261016051600658016102bb565b6101c0526101c051156105345760085415156105335760043560043360e05260c052604060c020555b5b005b6308befc1e600051141561057d57341561054f57600080fd5b600435602051811061056057600080fd5b50600460043560e05260c052604060c0205460005260206000f350005b600015610652575b61018052610140526101605260088054600182540110156105a557600080fd5b60018154018155506101605160056105bc57600080fd5b6005610140516001610140510110156105d457600080fd5b600161014051010614156105f657610160516000526000516101805156610650565b61016051600561060557600080fd5b60056101405160026101405101101561061d57600080fd5b6002610140510106141561063f5761016051600052600051610180515661064f565b6101405160005260005161018051565b5b005b600015610681575b61016052610140526004610140511115600061014051101516600052600051610160515650005b631c134cf260005114156106ca57341561069a57600080fd5b637029313d6101405260043561016052610160516006580161065a565b6101c0526101c05160005260206000f350005b600015610889575b61016052610140526002600154141561083a57606361014051181561075b57600060006000600060021515610708576000610725565b6000546002600054600202041461071e57600080fd5b6000546002025b610140516002811061073657600080fd5b600260c052602060c0200160c052602060c020546000f161075657600080fd5b61079f565b60006000600060006002151561077257600061078f565b6000546002600054600202041461078857600080fd5b6000546002025b6007546000f161079e57600080fd5b5b60006000600060006003600260c052602060c02060c052602060c0205460e05260c052604060c02054600260c052602060c02060c052602060c020546000f16107e757600080fd5b600060006000600060036001600260c052602060c0200160c052602060c0205460e05260c052604060c020546001600260c052602060c0200160c052602060c020546000f161083557600080fd5b610883565b60006000600060006003600260c052602060c02060c052602060c0205460e05260c052604060c02054600260c052602060c02060c052602060c020546000f161088257600080fd5b5b61016051565b600015610a20575b6101405260006003600260c052602060c02060c052602060c0205460e05260c052604060c02055600060036001600260c052602060c0200160c052602060c0205460e05260c052604060c0205560006004600260c052602060c02060c052602060c0205460e05260c052604060c02055600060046001600260c052602060c0200160c052602060c0205460e05260c052604060c0205560636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c0200155600260c052602060c0208060c052602060c02060008155600060018201556000600282015560006003820155506001810160c052602060c02060008155600060018201556000600282015560006003820155505060006008556000600155600080600560c052602060c020600161012060006001818352015b826101205160200211156109e657610a00565b6000610120518501555b81516001018083528114156109d3575b5050505050506000600b556000600c556000600a55600060065561014051565b63b13764966000511415610eea573415610a3957600080fd5b60026001541415610c9f576063610460526009546008541415610c1957600c54600b541115610abd5760006104605260086105a0527f506c6179657220310000000000000000000000000000000000000000000000006105c0526105a0805160200180610480828460006004600a8704601201f1610ab657600080fd5b5050610b76565b600c54600b541015610b24576001610460526008610540527f506c61796572203200000000000000000000000000000000000000000000000061056052610540805160200180610480828460006004600a8704601201f1610b1d57600080fd5b5050610b75565b60046104e0527f4472617700000000000000000000000000000000000000000000000000000000610500526104e0805160200180610480828460006004600a8704601201f1610b7257600080fd5b50505b5b61046051610480516104a0516104c05163aff1e0d361062052610460516106405261064051600658016106d2565b6104c0526104a05261048052610460526000506104606106a0525b6106a0515160206106a051016106a0526106a06106a0511015610be157610bbf565b60065801610891565b6106806106a0525b6106a0515260206106a051036106a0526104606106a051101515610c1557610bf2565b6000505b610480805160200180610700828460006004600a8704601201f1610c3c57600080fd5b5050610760610700516020818352015b6020610760511115610c5d57610c79565b60006107605161072001535b8151600101808352811415610c4c575b505060206106e0526040610700510160206001820306601f82010390506106e0f3610ee8565b6063610140526009546008541415610e6657600d54600b541115610d12576006610280527f506c6179657200000000000000000000000000000000000000000000000000006102a052610280805160200180610160828460006004600a8704601201f1610d0b57600080fd5b5050610dc5565b600d54600b541015610d73576005610220527f4167656e7400000000000000000000000000000000000000000000000000000061024052610220805160200180610160828460006004600a8704601201f1610d6c57600080fd5b5050610dc4565b60046101c0527f44726177000000000000000000000000000000000000000000000000000000006101e0526101c0805160200180610160828460006004600a8704601201f1610dc157600080fd5b50505b5b6101405161016051610180516101a05163aff1e0d36103005260006103205261032051600658016106d2565b6101a052610180526101605261014052600050610140610380525b61038051516020610380510161038052610380610380511015610e2e57610e0c565b60065801610891565b610360610380525b6103805152602061038051036103805261014061038051101515610e6257610e3f565b6000505b6101608051602001806103e0828460006004600a8704601201f1610e8957600080fd5b50506104406103e0516020818352015b6020610440511115610eaa57610ec6565b60006104405161040001535b8151600101808352811415610e99575b505060206103c05260406103e0510160206001820306601f82010390506103c0f35b005b63679ebb356000511415611981573415610f0357600080fd5b6002600154141561166957606360026001600260c052602060c0200160c052602060c0200154141560636002600260c052602060c02060c052602060c0200154141516600a54603c600a54011015610f5a57600080fd5b603c600a54014211151615611316576109c05163ee76be97610a00526002600260c052602060c02060c052602060c0200154610a205260026001600260c052602060c0200160c052602060c0200154610a4052610a4051610a205160065801610585565b610aa0526109c052610aa0516109c05260026001600260c052602060c0200160c052602060c02001546109c051146002600260c052602060c02060c052602060c02001546109c0511416156110f15760636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c02001556004610d00527f4472617700000000000000000000000000000000000000000000000000000000610d2052610d00805160200180610da0828460006004600a8704601201f161108e57600080fd5b5050610e00610da0516020818352015b6020610e005111156110af576110cb565b6000610e0051610dc001535b815160010180835281141561109e575b50506020610d80526040610da0510160206001820306601f8201039050610d80f3611311565b60026001600260c052602060c0200160c052602060c02001546109c05114156112145760636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c0200155600c80546001825401101561115b57600080fd5b60018154018155506008610be0527f506c617965722032000000000000000000000000000000000000000000000000610c0052610be0805160200180610c80828460006004600a8704601201f16111b157600080fd5b5050610ce0610c80516020818352015b6020610ce05111156111d2576111ee565b6000610ce051610ca001535b81516001018083528114156111c1575b50506020610c60526040610c80510160206001820306601f8201039050610c60f3611310565b600b80546001825401101561122857600080fd5b600181540181555060636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c02001556008610ac0527f506c617965722031000000000000000000000000000000000000000000000000610ae052610ac0805160200180610b60828460006004600a8704601201f16112b157600080fd5b5050610bc0610b60516020818352015b6020610bc05111156112d2576112ee565b6000610bc051610b8001535b81516001018083528114156112c1575b50506020610b40526040610b60510160206001820306601f8201039050610b40f35b5b611664565b600a54603c600a5401101561132a57600080fd5b603c600a540142116000600a541415161561161957600e54151561144857600b80546001825401101561135c57600080fd5b600181540181555060636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c020015560086107e0527f506c617965722031000000000000000000000000000000000000000000000000610800526107e0805160200180610880828460006004600a8704601201f16113e557600080fd5b50506108e0610880516020818352015b60206108e051111561140657611422565b60006108e0516108a001535b81516001018083528114156113f5575b50506020610860526040610880510160206001820306601f8201039050610860f3611618565b6001600e5414156115375760636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c020015560086106c0527f506c6179657220320000000000000000000000000000000000000000000000006106e0526106c0805160200180610760828460006004600a8704601201f16114d457600080fd5b50506107c0610760516020818352015b60206107c05111156114f557611511565b60006107c05161078001535b81516001018083528114156114e4575b50506020610740526040610760510160206001820306601f8201039050610740f3611617565b60636002600260c052602060c02060c052602060c0200155606360026001600260c052602060c0200160c052602060c020015560046105a0527f44726177000000000000000000000000000000000000000000000000000000006105c0526105a0805160200180610640828460006004600a8704601201f16115b857600080fd5b50506106a0610640516020818352015b60206106a05111156115d9576115f5565b60006106a05161066001535b81516001018083528114156115c8575b50506020610620526040610640510160206001820306601f8201039050610620f35b5b5b600061090052610900805160200180610980828460006004600a8704601201f161164257600080fd5b50506020610960526040610980510160206001820306601f8201039050610960f35b61197f565b6101405163ee76be97610180526002600260c052602060c02060c052602060c02001546101a0526006546101c0526101c0516101a05160065801610585565b6102205261014052610220516101405260065461014051146002600260c052602060c02060c052602060c0200154610140511416156117aa5760636002600260c052602060c02060c052602060c02001556004610480527f44726177000000000000000000000000000000000000000000000000000000006104a052610480805160200180610520828460006004600a8704601201f161174757600080fd5b5050610580610520516020818352015b602061058051111561176857611784565b60006105805161054001535b8151600101808352811415611757575b50506020610500526040610520510160206001820306601f8201039050610500f361197e565b60065461014051141561189c5760636002600260c052602060c02060c052602060c0200155600d8054600182540110156117e357600080fd5b60018154018155506005610360527f4167656e7400000000000000000000000000000000000000000000000000000061038052610360805160200180610400828460006004600a8704601201f161183957600080fd5b5050610460610400516020818352015b602061046051111561185a57611876565b60006104605161042001535b8151600101808352811415611849575b505060206103e0526040610400510160206001820306601f82010390506103e0f361197d565b600b8054600182540110156118b057600080fd5b600181540181555060636002600260c052602060c02060c052602060c02001556006610240527f506c617965720000000000000000000000000000000000000000000000000000610260526102408051602001806102e0828460006004600a8704601201f161191e57600080fd5b50506103406102e0516020818352015b602061034051111561193f5761195b565b60006103405161030001535b815160010180835281141561192e575b505060206102c05260406102e0510160206001820306601f82010390506102c0f35b5b5b005b600015611a1b575b61014052601161199857600080fd5b6011600343610c46430110156119ad57600080fd5b610c4643010a43610c46430110156119c457600080fd5b610c46430110600315600160031417176119dd57600080fd5b600343610c46430110156119f057600080fd5b610c4643010a06610160526005611a0657600080fd5b60056101605106600052600051610140515650005b639348cef76000511415611d54573415611a3457600080fd5b63619ea80661014052336101605261016051600658016102bb565b6101c0526101c05115611d52576101405161016051610180516101a0516101c051637029313d6102005260043561022052610220516006580161065a565b610280526101c0526101a0526101805261016052610140526102805115611d515760043360e05260c052604060c0205415611c565760026001541415611c51576001600260c052602060c02060c052602060c02001546103205260016001600260c052602060c0200160c052602060c020015461034052600061034051141560006103205114151615611c505760243560c052602060c02060043560c052602060c0201860c052602060c02061036052600260c052602060c02060c052602060c02054331415611b6257600061038052611b69565b6001610380525b60016103805160028110611b7c57600080fd5b600260c052602060c0200160c052602060c0200154610360511415611c4f57606360026001600260c052602060c0200160c052602060c02001541460636002600260c052602060c02060c052602060c0200154141615611c235742600a55600260c052602060c02060c052602060c02054331415611bfe576000600e55611c22565b6001600260c052602060c0200160c052602060c02054331415611c21576001600e555b5b5b60043560026103805160028110611c3957600080fd5b600260c052602060c0200160c052602060c02001555b5b5b611d50565b60016001541415611d4f576001600260c052602060c02060c052602060c02001546102a05260006102a0511815611d4e5760243560c052602060c02060043560c052602060c0201860c052602060c0206102c0526001600260c052602060c02060c052602060c02001546102c0511415611d4d576004356002600260c052602060c02060c052602060c02001556101406102e0525b6102e0515160206102e051016102e0526102e06102e0511015611d0d57611ceb565b60065801611989565b610300526102c06102e0525b6102e0515260206102e051036102e0526101406102e051101515611d4557611d22565b610300516006555b5b5b5b5b5b005b63c7a1865b6000511415611e30573415611d6d57600080fd5b63619ea80661014052336101605261016051600658016102bb565b6101c0526101c05115611e2e576009546008541015611e2d57600160043360e05260c052604060c020541415611e1257600260c052602060c02060c052602060c02054331415611df0576004356001600260c052602060c02060c052602060c0200155611e0d565b60043560016001600260c052602060c0200160c052602060c02001555b611e2c565b6004356001600260c052602060c02060c052602060c02001555b5b5b005b63eb7e27356000511415611e57573415611e4957600080fd5b600b5460005260206000f350005b63dde2e83f6000511415611e7e573415611e7057600080fd5b600c5460005260206000f350005b63909ff57e6000511415611ea5573415611e9757600080fd5b600d5460005260206000f350005b60006000fd",
  "source": "# Authors : \n# Hitesh Kaushik : 2018201057\n# Ankit Pant : 2018201035\n\n######################\n# Game Structure\n# 0 : Rock\n# 1 : Spock\n# 2 : Paper\n# 3 : Lizard\n# 4 : Scissor \n######################\n\n\nstruct Player:\n    playerAddr: address\n    playerHash: bytes32\n    playerChoice: uint256\n    playerNo: uint256\n    \n    \ngameFee: wei_value\nnum_players: uint256\nparticipants: Player[2]\nplayerPayout: map(address, wei_value)\nopponent: map(address,bool)\nwinner: string[10]\nagent_choice: uint256\nowner_address: address\ngame_counts: uint256\niter_counts: uint256\nrevealTime: timestamp\nplayer1_wins: public(uint256)\nplayer2_wins: public(uint256)\nagent_wins: public(uint256)\nrevealer: uint256\n\n@public\ndef __init__(bid: wei_value, addr: address):\n    self.gameFee = bid\n    self.num_players = 0\n    self.owner_address = addr\n    self.game_counts = 0\n    self.iter_counts = 10\n    self.participants[0].playerChoice = 99\n    self.participants[1].playerChoice = 99\n    self.revealer = 99\n    \n@public\n@constant\ndef get_owner_addr() -> address:\n    return self.owner_address\n\n@public\n@constant\ndef get_fee() -> wei_value:\n    return self.gameFee\n\n@public\n@constant\ndef get_payable_amount(addr: address) -> wei_value:\n    return self.playerPayout[addr]\n\n@public\n@constant\ndef get_number_players() -> uint256:\n    return self.num_players\n\n@public\n@constant\ndef get_game_count() -> uint256:\n    return self.game_counts\n\n@public\n@constant\ndef get_agent_choice() -> uint256:\n    return self.agent_choice\n\n@public\n@constant\ndef get_player_hash(addr:address) -> bytes32:\n    phash : bytes32\n    if addr == self.participants[0].playerAddr:\n        phash = self.participants[0].playerHash\n    elif addr == self.participants[1].playerAddr:\n        phash = self.participants[1].playerHash\n    return phash\n\n\n\n@private\ndef check_validity(addr: address, fee: wei_value) -> bool:\n    if(self.num_players >= 2 or fee < self.gameFee):\n        send(addr, fee)\n        return False\n    return True\n\n@constant\n@private    \ndef is_registered(addr: address) -> bool:\n    return (addr == self.participants[0].playerAddr or addr == self.participants[1].playerAddr)\n    \n@public\ndef check_registrations(addr: address) -> bool:\n    reg : bool = self.is_registered(addr)\n    if reg==True:\n        return True\n    else:\n        return False\n\n@public\n@payable\ndef register():\n    if self.is_registered(msg.sender):\n        send(msg.sender, msg.value)\n    else:\n        is_valid: bool = self.check_validity(msg.sender, msg.value)\n        if is_valid:\n            self.participants[self.num_players % 2].playerAddr = msg.sender\n            self.num_players += 1\n            if msg.value > self.gameFee:\n                self.playerPayout[msg.sender] += msg.value - self.gameFee\n        \n@public\ndef select_human_opponent(oppn: bool):\n    if self.is_registered(msg.sender):\n        if self.game_counts == 0:\n            self.opponent[msg.sender] = oppn\n\n@public\n@constant\ndef check_opponent(addr: address)->bool:\n    return self.opponent[addr]\n    \n@private \ndef check_winner(pl1: uint256, pl2: uint256) -> uint256:\n    self.game_counts += 1\n    if (pl1+1)%5 == pl2:\n        return pl2\n    elif (pl1+2)%5== pl2:\n        return pl2\n    else:\n        return pl1\n\n@constant\n@private\ndef valid_choice(ch: uint256) -> bool:\n    return (ch >= 0 and ch <= 4)   \n\n@constant\n@public\ndef check_valid_choice(ch: uint256) -> bool:\n    return self.valid_choice(ch)\n\n@private\ndef gamePayout(winner_idx: uint256):\n    if self.num_players == 2:\n        if winner_idx != 99:\n            send(self.participants[winner_idx].playerAddr, 2 * self.gameFee)\n        else:\n            send(self.owner_address, 2 * self.gameFee)\n        send(self.participants[0].playerAddr, self.playerPayout[self.participants[0].playerAddr])\n        send(self.participants[1].playerAddr, self.playerPayout[self.participants[1].playerAddr])\n    else:\n        send(self.participants[0].playerAddr, self.playerPayout[self.participants[0].playerAddr])\n    \n@private\ndef reset_game():\n    self.playerPayout[self.participants[0].playerAddr] = 0\n    self.playerPayout[self.participants[1].playerAddr] = 0\n    self.opponent[self.participants[0].playerAddr] = False\n    self.opponent[self.participants[1].playerAddr] = False\n    self.participants[0].playerChoice = 99\n    self.participants[1].playerChoice = 99\n    clear(self.participants)\n    clear(self.game_counts)\n    clear(self.num_players)\n    clear(self.winner)\n    clear(self.player1_wins)\n    clear(self.player2_wins)\n    clear(self.revealTime)\n    clear(self.agent_choice)\n    \n@public\ndef check_game_winner() -> string[10]:\n    if self.num_players == 2:\n        winner_idx: uint256 = 99\n        r_winner: string[10]\n        if self.game_counts == self.iter_counts:\n            if self.player1_wins > self.player2_wins:\n                winner_idx = 0\n                r_winner = \"Player 1\"\n            elif self.player1_wins < self.player2_wins:\n                winner_idx = 1\n                r_winner = \"Player 2\"\n            else:\n                r_winner = \"Draw\"\n            self.gamePayout(winner_idx)\n            self.reset_game()\n        return r_winner\n    else:\n        winner_idx: uint256 = 99\n        r_winner: string[10]\n        if self.game_counts == self.iter_counts:\n            if self.player1_wins > self.agent_wins:\n                r_winner = \"Player\"\n            elif self.player1_wins < self.agent_wins:\n                r_winner = \"Agent\"\n            else:\n                r_winner = \"Draw\"\n            self.gamePayout(0)\n            self.reset_game()\n        return r_winner\n        \n@public\ndef check_round_winner() -> string[10]:\n    if self.num_players == 2:\n        if self.participants[0].playerChoice != 99 and self.participants[1].playerChoice != 99 and block.timestamp <= self.revealTime + 60:\n            win: uint256\n            win = self.check_winner(self.participants[0].playerChoice, self.participants[1].playerChoice)\n            if win == self.participants[0].playerChoice and win == self.participants[1].playerChoice:\n                self.participants[0].playerChoice = 99\n                self.participants[1].playerChoice = 99\n                return \"Draw\"\n            elif win == self.participants[1].playerChoice:\n                self.participants[0].playerChoice = 99\n                self.participants[1].playerChoice = 99\n                self.player2_wins += 1\n                return \"Player 2\"\n            else:\n                self.player1_wins += 1\n                self.participants[0].playerChoice = 99\n                self.participants[1].playerChoice = 99\n                return \"Player 1\"\n        else:\n            if self.revealTime != 0 and block.timestamp > self.revealTime + 60:\n                if self.revealer == 0:\n                    self.player1_wins += 1\n                    self.participants[0].playerChoice = 99\n                    self.participants[1].playerChoice = 99\n                    return \"Player 1\"\n                elif self.revealer == 1:\n                    self.participants[0].playerChoice = 99\n                    self.participants[1].playerChoice = 99\n                    return \"Player 2\"\n                else:\n                    self.participants[0].playerChoice = 99\n                    self.participants[1].playerChoice = 99\n                    return \"Draw\"\n            return \"\"\n    else:\n        win: uint256\n        win = self.check_winner(self.participants[0].playerChoice, self.agent_choice)\n        if win == self.participants[0].playerChoice and win == self.agent_choice:\n            self.participants[0].playerChoice = 99\n            return \"Draw\"\n        elif win == self.agent_choice:\n            self.participants[0].playerChoice = 99\n            self.agent_wins += 1\n            return \"Agent\"\n        else:\n            self.player1_wins += 1\n            self.participants[0].playerChoice = 99\n            return \"Player\"\n        \n@private\ndef gen_random_choice() -> uint256:\n    temp:uint256 = ((block.number + 3142) ** 3) % 17\n    return temp % 5\n    \n@public\ndef reveal(ch: uint256, nonce: uint256):\n    if self.is_registered(msg.sender):\n        if self.valid_choice(ch):\n            if self.opponent[msg.sender]:\n                if self.num_players == 2:\n                    hash_0: uint256 = convert(self.participants[0].playerHash, uint256)\n                    hash_1: uint256 = convert(self.participants[1].playerHash, uint256)\n                    if hash_0 != 0 and hash_1 !=0:\n                        newHash: bytes32 = keccak256(convert(bitwise_xor(convert(keccak256(convert(ch, bytes32)), uint256), convert(keccak256(convert(nonce, bytes32)), uint256)), bytes32))\n                        playerId: uint256\n                        if(msg.sender == self.participants[0].playerAddr):\n                            playerId = 0\n                        else:\n                            playerId = 1\n                        if newHash == self.participants[playerId].playerHash:\n                            if self.participants[0].playerChoice == 99 and self.participants[1].playerChoice == 99:\n                                self.revealTime = block.timestamp\n                                if msg.sender == self.participants[0].playerAddr:\n                                    self.revealer = 0\n                                elif msg.sender == self.participants[1].playerAddr:\n                                    self.revealer = 1\n                            self.participants[playerId].playerChoice = ch\n            else:\n                if self.num_players == 1:\n                    hash_0: uint256 = convert(self.participants[0].playerHash, uint256)\n                    if hash_0 != 0:\n                        newHash: bytes32 = keccak256(convert(bitwise_xor(convert(keccak256(convert(ch, bytes32)), uint256), convert(keccak256(convert(nonce, bytes32)), uint256)), bytes32))\n                        if newHash == self.participants[0].playerHash:\n                            self.participants[0].playerChoice = ch\n                            self.agent_choice = self.gen_random_choice()\n            \n@public \ndef play(choiceHash: bytes32):\n    if self.is_registered(msg.sender):\n        if self.game_counts < self.iter_counts:\n            if(self.opponent[msg.sender] == True):\n                if msg.sender == self.participants[0].playerAddr:\n                    self.participants[0].playerHash = choiceHash\n                else:\n                    self.participants[1].playerHash = choiceHash\n            else:\n                self.participants[0].playerHash = choiceHash",
  "sourcePath": "/home/maven/Sem_III/Blockchains/Assignments/Assignment_1/spsls_smart_contract/SPSLS_truffle/contracts/SPSLS.vy",
  "compiler": {
    "name": "vyper",
    "version": "0.1.0b12+commit.a01cdc8"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x523aC99De16b0C7B915C98e942BFEBFA33AEdfE3",
      "transactionHash": "0x56d358ed6ea88082bb8a2e9a94b6ba51d542888777b1f5d626fa17378b47f729"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-09-17T19:50:06.400Z"
}